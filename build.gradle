plugins {
        id 'fabric-loom' version '1.3.10'
        id 'maven-publish'
}

// Retry configuration for loom
loom {
        runs {
                client {
                        client()
                        setConfigName("Fabric Client")
                        ideConfigGenerated(true)
                        runDir("run")
                }
                server {
                        server()
                        setConfigName("Fabric Server")
                        ideConfigGenerated(true)
                        runDir("run")
                }
        }
        
        // Add minecraft sources - helps deal with download issues
        // Local device may have better connection than Replit
        minecraft {
                // Offline mode may help with download issues
                offline()
                
                // Try to resolve download issues
                withAgents()
        }
}

version = project.mod_version
group = project.maven_group

base {
        archivesName = project.archives_base_name
}

repositories {
        // Add repositories to get dependencies from here
        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.terraformersmc.com/" }
        mavenCentral()
}

dependencies {
        // To change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
        inputs.property "version", project.version
        inputs.property "minecraft_version", project.minecraft_version
        inputs.property "loader_version", project.loader_version

        filesMatching("fabric.mod.json") {
                expand(
                        "version": project.version,
                        "minecraft_version": project.minecraft_version,
                        "loader_version": project.loader_version
                )
        }
        
        filesMatching("*.mixins.json") {
                expand "java_version": targetCompatibility.toString()
        }
}

tasks.withType(JavaCompile).configureEach {
        // Ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        it.options.encoding = "UTF-8"
}

java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
}

jar {
        from("LICENSE") {
                rename { "${it}_${project.base.archivesName.get()}"}
        }
}

// Configure the maven publication
publishing {
        publications {
                mavenJava(MavenPublication) {
                        from components.java
                }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
                // Add repositories to publish to here.
                // Notice: This block does NOT have the same function as the block in the top level.
                // The repositories here will be used for publishing your artifact, not for
                // retrieving dependencies.
        }
}